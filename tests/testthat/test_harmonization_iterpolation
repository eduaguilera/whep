library("testthat")

test_tibble_input <- tibble(
  items = c("prodone, prodtwo, prodonetwo, prodonetwo, prodone, prodtwo"),
  measurement = "lbs",
  year = c(1900, 1900, 1901, 1901, 1902, 1902),
  value = c(10, 0, 10, 10, 0, 10),
  item_code_harm = c(1, 2, 1, 2, 1, 2),
  item_name_harm = c("one", "two", "one", "two", "one", "two"),
  type = c("Simple", "Simple", "1:N", "1:N", "Simple", "Simple")
)

test_tibble_output <- tibble(
  items = c("one", "two", "one", "two", "one", "two"),
  item_code = c(1, 2, 1, 2, 1, 2),
  year = c(1900, 1900, 1901, 1901, 1902, 1902),
  measurement = "lbs",
  value = c(10, 0, 5, 5, 0, 10)
)

print(harmonization_function_interpolation(test_tibble_input) |> 
        arrange(year, item_code))


test_that("Harmonization is completed successfully", {
  test_tibble_input <- tibble(
    items = c("prodone, prodtwo, prodonetwo, prodonetwo, prodone, prodtwo"),
    measurement = "lbs",
    year = c(1900, 1900, 1901, 1901, 1902, 1902),
    value = c(10, 0, 10, 10, 0, 10),
    item_code_harm = c(1, 2, 1, 2, 1, 2),
    item_name_harm = c("one", "two", "one", "two", "one", "two"),
    type = c("Simple", "Simple", "1:N", "1:N", "Simple", "Simple")
  )
  test_tibble_output <- tibble(
    items = c("one", "two", "one", "two", "one", "two"),
    item_code = c(1, 2, 1, 2, 1, 2),
    year = c(1900, 1900, 1901, 1901, 1902, 1902),
    measurement = "lbs",
    value = c(10, 0, 5, 5, 0, 10)
  )
  
  actual <-
    test_tibble_input |>
    harmonization_function_interpolation() |> 
    arrange(year, item_code)

  expect_equal(
    actual,
    test_tibble_output
  )
})


harmonization_function_interpolation <- function(data){
  data_groups <- data |> 
    filter(type == "1:N") |> 
    select(items, item_code_harm) |> 
    distinct()
  
  harm_groups <- data_groups |> 
    group_by(items) |> 
    summarize(harm_set = list(unique(item_code_harm)), .groups = "drop")
  
  df_simple <- data |>
    filter(type == "Simple") |>
    group_by(item_name_harm, item_code_harm, year, measurement) |> 
    summarize(value = sum(value)) |> 
    ungroup()
  
  if(nrow(data_groups) == 0){
    return(df_simple |> 
             rename(item_code = item_code_harm,
                    items = item_name_harm))
  }
  
  group_year_presence <- df_simple |>
    select(item_code_harm, year) |> 
    left_join(data_groups, by = "item_code_harm") |>
    group_by(items, year) |>
    summarize(
      observed_harm = list(unique(item_code_harm)),
      .groups = "drop"
    ) |>
    left_join(harm_groups, by = "items") |>
    mutate(all_present = map2_lgl(harm_set, observed_harm, ~ all(.x %in% .y))) |>
    filter(all_present)
  
  complex_shares <- data_groups |>
    left_join(group_year_presence, by = "items") |>
    select(items, item_code_harm, year) |>
    left_join(df_simple |> select(-item_name_harm, -measurement), by = c("year", "item_code_harm")) |> 
    group_by(items, year) |> 
    mutate(total_value = sum(value, na.rm = T),
           value_share = value/total_value,
           year = as.numeric(year)) |> 
    select(-value, -total_value) |> 
    ungroup() |> 
    complete(items, item_code_harm, year = 1840:1960) |> 
    group_by(items, item_code_harm) |> 
    Filling(value_share, year) |> 
    select(items, item_code_harm, year, value_share)
  
  return_tibble <- data |>
    filter(type == "1:N") |>
    left_join(complex_shares, by = c("items", "item_code_harm", "year")) |> 
    mutate(value = value * value_share) |>
    select(year, item_name_harm, item_code_harm, value, measurement) |> 
    bind_rows(df_simple) |> 
    rename(items = item_name_harm, item_code = item_code_harm) |> 
    group_by(items, item_code, year, measurement) |> 
    summarize(value = sum(value))
  
  return(return_tibble)
  
}


